server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name aformulationoftruth.com www.aformulationoftruth.com;

  ssl_certificate     /etc/letsencrypt/live/aformulationoftruth.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/aformulationoftruth.com/privkey.pem;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:10m;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_cipers off;
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options SAMEORIGIN;
  add_header Referrer-Policy no-referrer-when-downgrade;
  add_header Permissions-Policy "geolocation=(), microphone=(), camera=()";
  gzip on;
  gzip_types text/plain text/css application/javascript application/json application/xml image/svg+xml;
  gzip_min_length 1024;
  
  root  /var/www/aformulationoftruth/frontend/build;
  index index.html;

    # Cache static assets aggressively
  location ^~ /static/ {
    expires 30d;
    add_header Cache-Control "public, immutable";
    try_files $uri =404;
  }
  location ^~ /assets/ {
    expires 30d;
    add_header Cache-Control "public, immutable";
    try_files $uri =404;
  }
  location / {
    try_files $uri /index.html;
  }
  
   # ---- Backend API proxy ----
  location /api/ {
    proxy_pass http://127.0.0.1:5000;
    proxy_http_version 1.1;

    # Forward client info & keep connections healthy
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection        "";

    # Useful timeouts
    proxy_read_timeout 75s;
    proxy_send_timeout 75s;

    # Disable buffering for APIs (optional)
    proxy_buffering off;
  }

  # If you want /verify at root to hit backend (your app already redirects)
  location = /verify {
    proxy_pass http://127.0.0.1:5000/verify;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Letâ€™s Encrypt challenge (if you renew via webroot)
  location ^~ /.well-known/acme-challenge/ {
    root /var/www/letsencrypt;
    default_type "text/plain";
  }


  # Exact file (optional). If you keep it, don't duplicate it elsewhere.
  location = /a4m_public.asc {
    default_type application/pgp-keys;
    add_header Content-Disposition 'attachment; filename="a4m_public.asc"';
    try_files /a4m_public.asc =404;
    expires 30d;
  }

  # --- SPA fallback using a named location to prevent loops ---
  location / { try_files $uri $uri/ @spa; }
  location @spa { try_files /index.html =404; }


  location / {
    try_files $uri $uri/ @spa;
  }

  # Logs (optional custom names)
  access_log /var/log/nginx/a4m.access.log;
  error_log  /var/log/nginx/a4m.error.log warn;
  
}
